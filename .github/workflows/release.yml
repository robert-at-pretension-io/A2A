name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: a2a-test-suite-linux-amd64
            asset_name: a2a-test-suite-linux-amd64

          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: a2a-test-suite-macos-intel
            asset_name: a2a-test-suite-macos-intel

          - target: aarch64-apple-darwin
            os: macos-latest
            artifact_name: a2a-test-suite-macos-arm64
            asset_name: a2a-test-suite-macos-arm64

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: a2a-test-suite-windows-amd64.exe
            asset_name: a2a-test-suite-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
                
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          retention-days: 1
          
  # Simple workflow to test building only (without release)
  test-success:
    name: Test Success
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - run: echo "âœ… Build test successful! All platforms built correctly."
          
  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            A2A Test Suite - Release ${{ github.ref_name }}
            
            This release includes binaries for:
            - Windows (x86_64)
            - macOS (Intel)
            - macOS (Apple Silicon)
            - Linux (x86_64)
            
            ## Usage
            
            ```bash
            # Test your A2A server
            ./a2a-test-suite run-tests --url http://your-server-url
            
            # Include unofficial tests
            ./a2a-test-suite run-tests --url http://your-server-url --run-unofficial
            ```
            
            For complete documentation, please see the README.md and cross-compile.md files.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          
  wait-for-release:
    name: Wait for Release Creation
    needs: create-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Wait for GitHub Release API
        run: |
          echo "Waiting for GitHub Release API to fully process the release..."
          sleep 15
          echo "Release should be fully propagated now, proceeding with uploads."
          
  upload-release:
    name: Upload Release Asset (${{ matrix.asset_name }})
    needs: wait-for-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      fail-fast: false
      matrix:
        include:
          - asset_name: a2a-test-suite-linux-amd64
            asset_path: a2a-test-suite-linux-amd64
            
          - asset_name: a2a-test-suite-macos-intel
            asset_path: a2a-test-suite-macos-intel
            
          - asset_name: a2a-test-suite-macos-arm64
            asset_path: a2a-test-suite-macos-arm64
            
          - asset_name: a2a-test-suite-windows-amd64.exe
            asset_path: a2a-test-suite-windows-amd64.exe
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          
      - name: Debug
        run: |
          ls -la
          echo "Working directory: $(pwd)"
          echo "Asset name: ${{ matrix.asset_name }}"
          echo "Asset path: ${{ matrix.asset_path }}"
          
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./${{ matrix.asset_path }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}